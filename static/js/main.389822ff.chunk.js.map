{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","setCurrentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","trackCurrentColor","background","color","className","currentTime","style","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.389822ff.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleLeft,\r\n  faPlay,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  audioRef,\r\n  currentSong,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  setSongInfo,\r\n  songInfo,\r\n  songs,\r\n  setSongs,\r\n}) => {\r\n  //! Active Song Skipping (Đổi màu khi chọn nhạc thông qua nút back & forward)\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  };\r\n\r\n  //todo Event Handler\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n  //Todo Điều hướng chuyển nhạc\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        activeLibraryHandler(songs[songs.length - 1]);\r\n        if (isPlaying) audioRef.current.play();\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    //! Check if the song is playing\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  //! Add the styles\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  const trackCurrentColor = {\r\n    background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div style={trackCurrentColor} className=\"track\">\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:0\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","const Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img alt={currentSong.name} src={currentSong.cover} />\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","const LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  id,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n}) => {\r\n  const songSelectHandler = async () => {\r\n    const selectedSong = songs.filter((state) => state.id === id);\r\n    await setCurrentSong(selectedSong[0]);\r\n    //! Add active state (Đổi màu khi chọn nhạc đang nghe)\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n\r\n    //! Check if the song is playing\r\n    if(isPlaying) audioRef.current.play();\r\n  };\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img alt={song.name} src={song.cover} />\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus }) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            songs={songs}\r\n            setCurrentSong={setCurrentSong}\r\n            song={song}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({setLibraryStatus, libraryStatus}) => {\r\n  return (\r\n    <nav>\r\n      <h1>Waves</h1>\r\n      <button onClick={()=>setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction chillHop(){\r\n    return[\r\n        {\r\n            name: \"Slim Bobby\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/10/23fdd99adc3e16abcb67b004ea3e748ebf433a49-1024x1024.jpg\",\r\n            artist: \"Aviino\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10448\",\r\n            color: [\"#F2CFEC\", \"#60709D\"],\r\n            id: uuidv4(),\r\n            active: true\r\n        },\r\n        {\r\n            name: \"Paved Paths\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/88e7eb711f8c71d87fc102e97cf91e36f692348d-1024x1024.jpg\",\r\n            artist: \"Leavv\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9919\",\r\n            color: [\"#355546\", \"#778574\"],\r\n            id: uuidv4(),\r\n            active: false\r\n        },\r\n        {\r\n            name: \"Wildlife\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg\",\r\n            artist: \"Philanthrope, chromonicci\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10263\",\r\n            color: [\"#6A433B\", \"#1B1313\"],\r\n            id: uuidv4(),\r\n            active: false\r\n        },\r\n        {\r\n            name: \"Faces\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/07/c50f86fb7696e5c5747e0fa2ada4fcbc2501fea7-1024x1024.jpg\",\r\n            artist: \"Knowmadic\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=8554\",\r\n            color: [\"#554753\", \"#969A86\"],\r\n            id: uuidv4(),\r\n            active: false\r\n        },\r\n        {\r\n            name: \"Embers in the Dark\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/06/52bd092974ccce9aa610c33f03575fc2d7f9c7d2-1024x1024.jpg\",\r\n            artist: \"Osvaldo, Garot Michael Conklin\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=8192\",\r\n            color: [\"#557C86\", \"#919984\"],\r\n            id: uuidv4(),\r\n            active: false\r\n        },\r\n        {\r\n            name: \"One Last Call\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg\",\r\n            artist: \"Nymano, Kanisan, Mau\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10134\",\r\n            color: [\"#5B518A\", \"#8E6A8F\"],\r\n            id: uuidv4(),\r\n            active: false\r\n        }\r\n    ]\r\n}\r\n\r\nexport default chillHop;","import { useState, useRef } from \"react\";\r\n//! Import conponents\r\nimport Player from \"./components/Player\";\r\nimport Song from \"./components/Song\";\r\nimport Library from \"./components/Library\";\r\nimport Nav from \"./components/Nav\";\r\n//! Import styles\r\nimport \"./styles/app.scss\";\r\n//! Import util\r\nimport data from \"./data\";\r\n\r\nfunction App() {\r\n  //todo Ref\r\n  const audioRef = useRef(null);\r\n  //! State\r\n  const [songs, setSongs] = useState(data());\r\n  const [currentSong, setCurrentSong] = useState(songs[0]);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [songInfo, setSongInfo] = useState({\r\n    currentTime: 0,\r\n    duration: 0,\r\n    animationPercentage: 0,\r\n  });\r\n  const [libraryStatus, setLibraryStatus] = useState(false);\r\n  const timeUpdateHandler = (e) => {\r\n    const current = e.target.currentTime;\r\n    const duration = e.target.duration;\r\n    //Calculate percentage\r\n    const roundedCurrent = Math.round(current);\r\n    const roundedDuration = Math.round(duration);\r\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\r\n    setSongInfo({\r\n      ...songInfo,\r\n      currentTime: current,\r\n      duration: duration,\r\n      animationPercentage: animation,\r\n    });\r\n  };\r\n\r\n  const songEndHandler = async () => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  return (\r\n    <div className={`App ${libraryStatus ? 'library-active' : ``}`}>\r\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\r\n      <Song currentSong={currentSong} />\r\n      <Player\r\n        audioRef={audioRef}\r\n        currentSong={currentSong}\r\n        setCurrentSong={setCurrentSong}\r\n        isPlaying={isPlaying}\r\n        setIsPlaying={setIsPlaying}\r\n        songInfo={songInfo}\r\n        setSongInfo={setSongInfo}\r\n        songs={songs}\r\n        setSongs={setSongs}\r\n      />\r\n      <Library\r\n        audioRef={audioRef}\r\n        songs={songs}\r\n        setCurrentSong={setCurrentSong}\r\n        isPlaying={isPlaying}\r\n        setSongs={setSongs}\r\n        libraryStatus={libraryStatus}\r\n      />\r\n      <audio\r\n        onTimeUpdate={timeUpdateHandler}\r\n        onLoadedMetadata={timeUpdateHandler}\r\n        ref={audioRef}\r\n        src={currentSong.audio}\r\n        onEnded={songEndHandler}\r\n      ></audio>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}